<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- StandardPBE... 클래스가 암호문을 복호화할 때 사용할 salt 키를 설정할 보조 클래스 -->
	<!-- 서버, 컴퓨터에 설정된 환경변수 값을 읽어서 salt로 사용할 수 있도록 만들어주는 클래스 -->
	<bean id="envConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="passwordEnvName" value="BIZ.COM" />
	</bean>
	
	<!-- jasypt의 Standard..Encryptor 클래스가 db.connection.properties 파일의 암호화된 문자열을 읽어서 복호화한 후 -->
	<!-- 일반 문자열로 변환하여 property로 사용할 수 있도록 도와주는 보조 클래스 -->
	<!-- 바로 집어넣어도 되지만 이 프로젝트에선 bean으로 만들어서 집어넣는 방법 선택 -->
	<bean id="encConvert" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="envConfig"/>
	</bean>
	
	<!-- db.connection.properties로부터 username과 password를 가져와서 사용하기 위한 준비 -->
	<!-- 이 부분이 있어야 ${mysql.username}을 사용해서 불러올 수 있다 -->
	<!-- 가져온 암호화된 문자열을 평문으로 복호화한다 -->
	<bean class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="encConvert"/>
		<property name="fileEncoding" value="UTF-8"/>
		<property name="locations">
			<list>
				<value>/WEB-INF/spring/db.connection.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Security 인증과 관련된 user DB 설정 -->
	<!-- dataSource : driverClassName, url, username, password -->
	<!-- &amp;useSSL=false : 5.7에서 이슈 발생. 보안 연결을 설정하지 않으면 MySQL 서버에 접근하지 못하던 문제를 해결하는 방법이었음. 8.x에서는 사용하지 말아야 하는 옵션 -->
	<!-- 8.0 버전대에서 사용하려면 &allowPublicKeyRetrieval=true 를 추가해야 한다 -->
	<bean id="authDB" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/secure?serverTimezone=Asia/Seoul&amp;useSSL=false"/>
		<property name="username" value="${mysql.username}"/>
		<property name="password" value="${mysql.password}"/>
	</bean>
	
	<context:annotation-config/>
	
	<!-- 트랜잭션 관리자 활성화 -->
	<tx:annotation-driven/>
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="authDB"/>
	</bean>
	
</beans>
