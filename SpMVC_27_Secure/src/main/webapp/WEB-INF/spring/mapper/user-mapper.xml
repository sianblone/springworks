<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.biz.sec.persistence.UserDao">

	<!-- VO는 username으로 설계해놓았기 때문에 AS를 이용해서 DB 테이블의 user_name과 매핑될 수 있도록 설정해준다 -->
	<select id="selectAll" resultMap="userAndAuthoritiesRM">
		SELECT
			id,
			user_name AS username,
			user_pass AS password,
			enabled,
			email,
			phone,
			address
		FROM tbl_users
	</select>

	<select id="findById" resultMap="userAndAuthoritiesRM">
		SELECT
			id,
			user_name AS username,
			user_pass AS password,
			enabled,
			email,
			phone,
			address
		FROM tbl_users
		WHERE id = #{id}
	</select>
	
	<select id="findByUserName" resultMap="userAndAuthoritiesRM">
		SELECT
			id,
			user_name AS username,
			user_pass AS password,
			enabled,
			email,
			phone,
			address
		FROM tbl_users
		WHERE user_name = #{username}
	</select>
	
	<resultMap id="userAndAuthoritiesRM" type="userDetailsVO">
		<id column="id" property="id" />
		<result column="username" property="username" />
		<collection property="authorities" column="username" ofType="authorityVO" select="findByUsernameAuthorities">
		</collection>
	</resultMap>
	
	<select id="findByUsernameAuthorities" resultType="authorityVO">
		SELECT *
		FROM authorities
		WHERE username = #{username}
	</select>

	<select id="create_table">
		${create_table}
	</select>
	
	<insert id="insert">
		INSERT INTO `tbl_users` (
			`user_name`,
			`user_pass`,
			`enabled`,
			email,
			phone,
			address
		) VALUES (
			#{username},
			#{password},
			#{enabled},
			#{email},
			#{phone},
			#{address}
		);
	</insert>
	
	<update id="updateInfo">
		UPDATE `tbl_users`
		SET
		`enabled` = #{enabled},
		`email` = #{email},
		`phone` = #{phone},
		`address` = #{address}
		WHERE `user_name` = #{username}
	</update>
	
	<update id="updatePW">
		UPDATE `tbl_users`
		SET
		`user_pass` = #{password}
		WHERE `user_name` = #{username}
	</update>
	
</mapper>